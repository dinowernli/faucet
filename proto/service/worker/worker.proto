syntax = "proto3";

package faucet.service.worker;

import "proto/workspace/workspace.proto";

// A request for the overall status of this worker.
message StatusRequest {
}

message StatusResponse {
  bool healthy = 1;
  int32 queue_size = 2;
}

// The current state of a requested execution.
enum ExecutionStatus {
  UNKNOWN = 0;
  QUEUED = 1;
  RUNNING = 2;
  SUCCEEDED = 3;
  FAILED = 4;
}

// A request to execute a build.
message ExecutionRequest {
  // The exact state of a repository to use for this execution.
  faucet.workspace.Checkout checkout = 1;
}

message ExecutionResponse {
  ExecutionStatus execution_status = 1;
}

service Worker {
  rpc Status (StatusRequest) returns (StatusResponse);

  // After requesting, multiple instance of ExecutionResponse are streamed to
  // the caller. The stream ends with the first ExecutionResponse containing a
  // status of type "Finished".
  rpc Execute (ExecutionRequest) returns (stream ExecutionResponse);
}
